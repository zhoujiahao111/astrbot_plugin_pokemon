# coding=utf-8

from PIL import Image as PIL_Image, ImageDraw, ImageFont
import os


def 通用图片构造方法(合成参数: dict):
    """
        通用的图片和文字合成函数。

        Args:
            合成参数 (dict): 一个包含所有合成所需信息的字典。结构如下:
                {
                    "背景图": "background.png",
                    "图片元素": [
                        {
                            "路径": "path/to/image1.png",
                            "位置": (x, y),  # 左上角坐标 (x, y)
                            "大小": (宽, 高),
                            "图层": 1  # 数字越大，越靠上
                        },
                        # ... 更多图片元素
                    ],
                    "文字元素": [
                        {
                            "内容": "示例文本",
                            "位置": (x, y), # 文字左上角坐标 (x, y)
                            "字体路径": "path/to/font.ttf",
                            "大小": 30,
                            "颜色": (255, 255, 255), # RGB 颜色
                            "图层": 2
                        },
                        # ... 更多文字元素
                    ]
                }

        Returns:
            bytes: 合成后的 JPG 图片的字节数据。

        Raises:
            ValueError: 如果背景图路径未提供。
            FileNotFoundError: 如果任何图片或字体文件路径无效。
        """
    images文件夹路径 = os.path.join(
        os.path.join(
            os.path.dirname(os.path.dirname(os.path.abspath(__file__))),
            'data',
            'images'
        )
    )

    背景图路径 = os.path.join(images文件夹路径, 'backgrounds', 合成参数.get("背景图"))

    if not 背景图路径:
        print("图片生成失败, 没找到背景图路径")
        return

    字体路径 = os.path.join(
        os.path.join(
            os.path.dirname(os.path.dirname(os.path.abspath(__file__))),
            'data',
            'font'
        ),
        "NotoSerifCJK-Bold.ttc"
    )

    背景 = PIL_Image.open(背景图路径)
    背景 = 背景.convert('RGBA')

    图片元素列表 = 合成参数.get("图片元素", [])
    文字元素列表 = 合成参数.get("文字元素", [])

    所有元素 = []

    # 为图片元素添加类型标识
    for 元素 in 图片元素列表:
        元素['类型'] = '图片'
        所有元素.append(元素)

    # 为文字元素添加类型标识
    for 元素 in 文字元素列表:
        元素['类型'] = '文字'
        所有元素.append(元素)

    # 根据图层值对所有元素进行排序（从小到大，小的在下面）
    所有元素.sort(key=lambda x: x.get('图层', 0))

    # 依次将元素绘制到背景图上
    for 元素 in 所有元素:
        if 元素['类型'] == '图片':
            素材图片 = PIL_Image.open(os.path.join(images文件夹路径, 元素['路径']))
            # 确保素材也为 RGBA 以保留透明度
            素材图片 = 素材图片.convert('RGBA')

            if 元素.get("大小", False):
                素材图片 = 素材图片.resize(元素['大小'], PIL_Image.Resampling.LANCZOS)

            # 使用 `mask` 参数来正确处理透明通道
            背景.paste(素材图片, 元素['位置'], mask=素材图片)

        elif 元素['类型'] == '文字':
            绘制 = ImageDraw.Draw(背景)
            try:
                字体 = ImageFont.truetype(字体路径, 元素['大小'])
            except IOError:
                print(f"警告: 无法加载字体 {字体路径}。将使用默认字体。")
                字体 = ImageFont.load_default()

            if 元素.get("倾斜", False):
                print(元素['倾斜'])
                绘制.text(
                    xy=元素['位置'],
                    text=元素['内容'],
                    font=字体,
                    fill=元素['颜色'],
                    angle=元素['倾斜'],
                    position = 10
                )
            else:
                绘制.text(
                    xy=元素['位置'],
                    text=元素['内容'],
                    font=字体,
                    fill=元素['颜色']
                )

    最终图片 = 背景.convert('RGB')
    最终图片.show()


'''
 Args:
            合成参数 (dict): 一个包含所有合成所需信息的字典。结构如下:
                {
                    "背景图": "background.png",
                    "图片元素": [
                        {
                            "路径": "path/to/image1.png",
                            "位置": (x, y),  # 左上角坐标 (x, y)
                            "大小": (宽, 高),
                            "图层": 1  # 数字越大，越靠上
                        },
                        # ... 更多图片元素
                    ],
                    "文字元素": [
                        {
                            "内容": "示例文本",
                            "位置": (x, y), # 文字左上角坐标 (x, y)
                            "大小": 30,
                            "颜色": (255, 255, 255), # RGB 颜色
                            "图层": 2
                        },
                        # ... 更多文字元素
                    ]
                }
                '''

通用图片构造方法(
    {
        "背景图": "队伍信息背景.jpg",
        "图片元素": [
            {
                "路径": "ui/半透明信息展示黑框.png",
                "位置": (43, 103),  # 第一个宝可梦框的位置
                "图层": 1
            },
            {
                "路径": "pokemon/025Pikachu.png",
                "位置": (240, 110),
                "大小": (150, 150),
                "图层": 2
            },
            {
                "路径": "icons/雌_标识.png",
                "位置": (130, 160),
                "大小": (26, 26),
                "图层": 2
            },
            {
                "路径": "icons/电.png",
                "位置": (430, 115),
                "大小": (92, 24), # 80%大小
                "图层": 2
            }


        ],
        "文字元素": [
            {
                "内容": "皮卡丘",
                "位置": (60, 120),
                "大小": 25,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "LV 100",
                "位置": (60, 160),
                "大小": 18,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "天赋: 96",
                "位置": (60, 190),
                "大小": 20,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "性格: 天真",
                "位置": (60, 225),
                "大小": 19,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "成长速度: 较快",  # 招式高度间隔 25
                "位置": (430, 140),
                "大小": 18,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "成长速度: 较快",  # 招式高度间隔 25
                "位置": (430, 140),
                "大小": 18,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "分类: 暗黑宝可梦",  # 招式高度间隔 25
                "位置": (430, 165),
                "大小": 18,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "不可极巨化",  # 招式高度间隔 25
                "位置": (430, 190),
                "大小": 18,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "可mega进化",  # 招式高度间隔 25
                "位置": (430, 215),
                "大小": 18,
                "颜色": (255, 255, 255),
                "图层": 2
            },
            {
                "内容": "1",
                "位置": (590, 190),
                "大小": 52,
                "颜色": (220, 220, 220),
                "图层": 2,
                "倾斜": 60
            }
        ]
    }
)


